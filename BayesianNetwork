import wx
import json
import networkx as nx
import matplotlib as mpl
import os
import datetime as dt
import functools as ft
import pdb
import itertools as it
import numpy as np
import Bayesian as b

########################################################################
class BayesianNetwork(wx.Frame):
    """"""
 
    #----------------------------------------------------------------------
    def __init__(self):
        """Constructor"""
        wx.Frame.__init__(self, None, title="Bayesian Network")
 
        self.panel = wx.Panel(self, wx.ID_ANY)
 
        # create the menubar
        menuBar = wx.MenuBar()
 
        # create the first menu (starting on left)
        # network menu
        networkMenu = wx.Menu()
        createNewNet = networkMenu.Append(101, "&Create new network", "")
        networkMenu.Append(102, "&Save network to JSON", "")def onCreateNewNetClick(self, event):
            """"""
            self.networkname = wx.StaticText(self.panel, label="Network name :", pos=(20,60))
            self.editname = wx.TextCtrl(self.panel, value="Enter network name here", pos=(150, 60), size=(140,-1))
            net = b(editname)

        # Save network syntax
        menuSave = networkMenu.Append(102, "&Save network to JSON", "")
        self.Bind(wx.EVT_MENU, self.OnSave, menuSave)

        def OnSave(self, event):
            if not self.filename:
                self.OnSaveAs(event)
                return
            else:
                self.SetTemporaryStatus("File saved")
                fullname = os.path.join(self.dirname, self.filename)
                b.saveJSON(fullname)

        def OnSaveAs(self, event):
            dlg = wx.FileDialog(self, "Choose a file", defaultDir=self.dirname,
                                defaultFile=self.filename, style=wx.FD_SAVE)

            if dlg.ShowModal() == wx.ID_OK:
                self.filename = dlg.GetFilename()
                self.dirname = dlg.GetDirectory()
                fullname = os.path.join(self.dirname, self.filename)
                self.DisplayFilenameOnStatusBar()
                self.OnSave(event)
            dlg.Destroy()




        #Load network syntax
        menuLoad = networkMenu.Append(103, "&Load network from JSON", "")
        self.Bind(wx.EVT_MENU, self.OnLoad, menuLoad)

        def OnLoad(self,e):
            dlg = wx.FileDialog(self, "Choose a file", defaultDir=self.dirname,
                            defaultFile=self.filename, style=wx.FD_OPEN)

            if dlg.ShowModal() == wx.ID_OK:
                self.filename = dlg.GetFilename()
                self.dirname = dlg.GetDirectory()
                fullname = os.path.join(self.dirname, self.filename)
                self.DisplayFilenameOnStatusBar()
                b.loadJSON(fullname)
            dlg.Destroy()
        
        # node menu        
        nodeMenu = wx.Menu()
        createNewNode = nodeMenu.Append(201, "&Add new node", "")
        nodeMenu.Append(202, "&Edit existing node", "")
        
        # inference menu        
        infMenu = wx.Menu()
        infMenu.Append(301, "&Set Evidence", "")
        infMenu.Append(302, "&Clear Evidence", "")
 
        # add menus to menubar
        menuBar.Append(networkMenu, "&Network")
        menuBar.Append(nodeMenu, "&Node")
        menuBar.Append(infMenu, "&Inference")
        self.SetMenuBar(menuBar)
        self.Bind(wx.EVT_MENU,self.onCreateNewNetClick,createNewNet)
        self.Bind(wx.EVT_MENU,self.onCreateNewNodeClick,createNewNode)


        
    #----------------------------------------------------------------------
    def onExit(self, event):
        """"""
        self.Close()
        
    #----------------------------------------------------------------------
    def onCreateNewNetClick(self, event):
        """"""
        self.networkname = wx.StaticText(self.panel, label="Network name :", pos=(20,60))
        self.editname = wx.TextCtrl(self.panel, value="Enter network name here", pos=(150, 60), size=(140,-1))
        net = b(editname)
        
    def onCreateNewNodeClick(self, event):
        """"""
        self.newnodeDisplayTxt = wx.StaticText(self.panel, label="This will create a new node for the Bayesian Network. Add the parent nodes followed by the child nodes", pos=(20,30))
        self.nodenameLbl = wx.StaticText(self.panel, label="Node name :", pos=(20,60))
        self.nodename = wx.TextCtrl(self.panel, value="Enter node name here", pos=(150, 60), size=(140,-1))
        self.parentDisplayTxt = wx.StaticText(self.panel, label="Enter the states of the above node in comma separated format (example: a1,a2,a3) ", pos=(20,90))     
        self.statenameLbl = wx.StaticText(self.panel, label="State names :", pos=(20,120))
        self.statenames = wx.TextCtrl(self.panel, value="Enter state names here", pos=(150, 120), size=(140,-1))
        self.parentDisplayTxt = wx.StaticText(self.panel, label="If the above defined node is a child node, add the parent nodes below", pos=(20,150))
        self.parentLbl = wx.StaticText(self.panel, label="Parent node names (if any) :", pos=(20,180))
        self.parent = wx.TextCtrl(self.panel, value="Enter parent node names here in comma separated format (example: A,C)", pos=(150, 180), size=(140,-1))
        self.button1 = wx.Button(self.panel, id=-1, label='Submit',pos=(20, 230), size=(175, 28))
        self.button1.Bind(wx.EVT_BUTTON, self.button1Click)
        

    def button1Click(self,event):
        self.button1.Hide()        
        #----------------------------------------------------------------------
# Run the program
if __name__ == "__main__":
    app = wx.App(False)
    frame = BayesianNetwork().Show()
    app.MainLoop()
